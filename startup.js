var username, password, sitename, version = "3"; var util = util || {}; util.toArray = function (a) { return Array.prototype.slice.call(a || [], 0) }; var audjfodsaua = !1, Terminal = Terminal || function (a, b) { function c(a) { t.length && ((38 == a.keyCode || 40 == a.keyCode) && (t[u] ? t[u] = this.value : v = this.value), 38 == a.keyCode ? (u-- , 0 > u && (u = 0)) : 40 == a.keyCode && (u++ , u > t.length && (u = t.length)), (38 == a.keyCode || 40 == a.keyCode) && (this.value = t[u] ? t[u] : v, this.value = this.value)) } function d(a) { r.insertAdjacentHTML("beforeEnd", "<p>" + a + "</p>") } function e() { var a = document; return Math.max(Math.max(a.body.scrollHeight, a.documentElement.scrollHeight), Math.max(a.body.offsetHeight, a.documentElement.offsetHeight), Math.max(a.body.clientHeight, a.documentElement.clientHeight)) } function f(a, b) { if (!audjfodsaua) return void m(a); switch (a) { case "clear": return r.innerHTML = "", void (this.value = ""); case "date": d(new Date); break; case "echo": d(b.join(" ")); break; case "help": i(b); break; case "uname": d(navigator.appVersion); break; case "username": username = b, d(`username:${username}`), d(result); break; case "ps": d(`u:${username}_p:${password}_h:${sitename}`); break; case "ssh-keygen": h(b); break; case "ssh": g(b); break; case "man": j(b); break; default: a && d(a + ": command not found"); } } function g(a) { void 0 !== a && 1 === a.length ? (sitename = a[0].trim().toLowerCase(), p()) : d("Please provide a valid host") } function h(a) { if (void 0 === a || 4 !== a.length) return d("Please provide parameters"), void d("Exiting..."); var b = "-t" === a[0], c = parseInt(a[1]), e = Number.isInteger(c) && 0 < c && 9 > c, f = "-c" === a[2], g = parseInt(a[3]), h = Number.isInteger(g) && 0 < g; if (f && b && h && e) { var i = l(c), j = new MPW(username, password, version); return void j.generatePassword(sitename, g, i).then(function (a) { d(a) }, function (a) { d(a) }) } d("Wrong parameters! RTFM") } function i(a) { (void 0 === a || 0 === a.length) && d("<div class=\"ls-files\">" + s.join("<br>") + "</div>") } function j(a) { return void 0 === a || 0 === a.length ? void d("Please provide a valid manual page.") : "ssh-keygen" === a[0] ? void k() : void d(`There is no manual with name <b>${a}</b>.`) } function k() { d("<b>Name</b>"), d("<b>ssh-keygen</b> - authentication key generation, management and conversion"), d("<br>"), d("<b>Synopsis</b>"), d("<b>ssh-keygen</b> -t type -c counter"), d("<br>"), d("<b>Description<b>"), d("The options are as follows:"), d("&nbsp; <b>-t</b> site type"), d("&nbsp; &nbsp; Specifies the type of key to create. The possible values are:"), d("&nbsp; &nbsp; 1 (pin)"), d("&nbsp; &nbsp; 2 (short)"), d("&nbsp; &nbsp; 3 (basic)"), d("&nbsp; &nbsp; 4 (medium)"), d("&nbsp; &nbsp; 5 (long)"), d("&nbsp; &nbsp; 6 (maximum)"), d("&nbsp; &nbsp; 7 (name)"), d("&nbsp; &nbsp; 8 (phrase)"), d("&nbsp; <b>-c</b> site counter"), d("&nbsp; &nbsp; Specifies a seed counter. The possible values are [1,500]") } function l(a) { if (void 0 !== a) return 1 === a ? "pin" : 2 === a ? "short" : 3 === a ? "basic" : 4 === a ? "medium" : 5 === a ? "long" : 6 === a ? "maximum" : 7 === a ? "name" : 8 === a ? "phrase" : void 0 } function m(a) { if (!1 === audjfodsaua) { if (null == username) return void 0 !== a && 0 < a.length ? (username = a.trim().toLowerCase(), d(""), !1) : (d(""), !1); if (null == password) return void 0 !== a && 0 < a.length ? (password = a.trim().toLowerCase(), audjfodsaua = !0, o(), !0) : (d(""), !1) } } function n() { if (!0 == audjfodsaua) { var a = void 0 === sitename ? "root" : sitename; return `${username}@${a}:~# ` } return void 0 === username ? "login: " : "password: " } function o() { d(`Last login: ${new Date} on tty1`), d("Welcome to ubuntu") } function p() { d("Welcome to Ubuntu 16.04.2 LTS (GNU/LINUX 4.4.9-93-generic x86_4)"), d(""), d("0 packages can be updated."), d("6 updates are security updates."), d(""), d("Last login: Sat Apr 6 21:49:57 2019 from 127.0.0.1") } window.URL = window.URL || window.webkitURL, window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem; var q = document.querySelector(a), r = document.querySelector(b); const s = ["clear", "date", "echo", "ssh", "ssh-keygen"]; var t = [], u = 0, v = 0; return window.addEventListener("click", function () { q.focus() }, !1), q.addEventListener("click", function () { this.value = this.value }, !1), q.addEventListener("keydown", c, !1), q.addEventListener("keydown", function (a) { if (9 == a.keyCode) a.preventDefault(); else if (13 == a.keyCode) { this.value && (t[t.length] = this.value, u = t.length); var b = this.parentNode.parentNode.cloneNode(!0); b.removeAttribute("id"), b.classList.add("line"); var c = b.querySelector("input.cmdline"); if (c.autofocus = !1, c.readOnly = !0, r.appendChild(b), this.value && this.value.trim()) { var d = this.value.split(" ").filter(function (a) { return a }), g = d[0].toLowerCase(); d = d.splice(1) } f(g, d), this.parentNode.parentNode.childNodes[1].innerText = n(), window.scrollTo(0, e()), this.value = "" } }, !1), { init: function () { d("") }, output: d } }; $(function () { $(".prompt").html("login: "); var a = new Terminal("#input-line .cmdline", "#wrapper output"); a.init() });